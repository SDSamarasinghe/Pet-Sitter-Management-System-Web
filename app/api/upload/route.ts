import { NextRequest, NextResponse } from 'next/server';import { v2 as cloudinary } from 'cloudinary';// Configure Cloudinarycloudinary.config({  cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,  api_key: process.env.CLOUDINARY_API_KEY,  api_secret: process.env.CLOUDINARY_API_SECRET,});export async function POST(request: NextRequest) {  try {    const formData = await request.formData();    const file = formData.get('file') as File;    if (!file) {      return NextResponse.json({ error: 'No file provided' }, { status: 400 });    }    // Convert file to base64    const bytes = await file.arrayBuffer();    const buffer = Buffer.from(bytes);    const base64String = `data:${file.type};base64,${buffer.toString('base64')}`;    // Upload to Cloudinary    const result = await cloudinary.uploader.upload(base64String, {      folder: 'pets', // Organize uploads in a folder      resource_type: 'auto', // Automatically detect file type    });    return NextResponse.json({       secure_url: result.secure_url,      public_id: result.public_id     });  } catch (error) {    console.error('Upload error:', error);    return NextResponse.json(      { error: 'Upload failed' },       { status: 500 }    );  }}